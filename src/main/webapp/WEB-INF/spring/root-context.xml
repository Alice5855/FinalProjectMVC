<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:task="http://www.springframework.org/schema/task"
	xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-4.3.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">
   
   
   <!-- HikariCP configuration -->
   <bean id="dataSource" class="com.zaxxer.hikari.HikariDataSource" destroy-method="close">
      <constructor-arg ref="hikariConfig"/>
   </bean>
   
   <!-- Root Context: defines shared resources visible to all other web components -->
   <bean id="hikariConfig" class="com.zaxxer.hikari.HikariConfig">
      <!-- log4jdbc를 이용하는 경우 jdbc driver와 url 정보를 수정해야함
      <property name="driverClassName" value="oracle.jdbc.driver.OracleDriver"></property>
      <property name="jdbcUrl" value="jdbc:oracle:thin:@localhost:1521:orcl"></property>
      -->
      <property name="driverClassName" value="net.sf.log4jdbc.sql.jdbcapi.DriverSpy"></property>
      <property name="jdbcUrl" value="jdbc:log4jdbc:oracle:thin:@localhost:1521:orcl"></property>
      <property name="username" value="FantasticFour"></property>
      <property name="password" value="FantasticFour"></property>
   </bean>
   
   <!-- Spring에서 sqlSessionFactiory를 등록하는 작업은 SqlSessionFactoryBean을 이용 -->
   <bean id="sqlSessionFactory"
      class="org.mybatis.spring.SqlSessionFactoryBean">
      <property name="dataSource" ref="dataSource"></property>
   </bean>
   
   <bean id="transactionManager" 
      class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
      <property name="dataSource" ref="dataSource"></property>
   </bean>
   
   <tx:annotation-driven/>
   
   <!-- package별로 mapper service 등록하세요 -->
   <mybatis-spring:scan base-package="com.spring.market.product.mapper"/>
   <!--
   <mybatis-spring:scan base-package="com.spring.market.security.mapper"/>
   -->
   <mybatis-spring:scan base-package="com.spring.market.reply.mapper"/>
   <context:component-scan base-package="com.spring.market.product.service" />
   <!--
   <context:component-scan base-package="com.spring.market.security.service" />
   -->
   <context:component-scan base-package="com.spring.market.reply.service" />
   <!--
   <context:component-scan base-package="com.spring.market" />
   -->
   
   <task:annotation-driven/>
   
   
   <!-- quartz library 사용하기 위한 task tag -->
<!--    <context:component-scan base-package="org.zerock.task" /> -->
   <!-- FileCheckTask class가 bean으로 인식되어 정상 작동하도록 context 추가 -->
   
</beans>