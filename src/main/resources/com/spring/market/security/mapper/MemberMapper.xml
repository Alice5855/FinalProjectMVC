<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
              "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.spring.market.security.mapper.MemberMapper">

<resultMap type="com.spring.market.security.model.Member" id="MemberMap">
	<id property="memNum" column="memNum"/>
	<result property="memNum" column="memNum"/>
	<result property="memName" column="memName"/>	
	<result property="memEmail" column="memEmail"/>	
	<result property="memNickname" column="memNickname"/>	
	<result property="memPw" column="memPw"/>	
	<result property="memAd" column="memAd"/>	
	<result property="memGender" column="memGender"/>
	<result property="memPh" column="memPh"/>
	<collection property="memAuth" resultMap="authMap"></collection>	
</resultMap>


<resultMap type="com.spring.market.security.model.Auth" id="authMap">
	<result property="memAuth" column="memAuth"/>
	<result property="memNum" column="memNum"/>
</resultMap>
	
	
	<select id="getSeq" resultType="Long">
			select seq_member.nextval from dual
	</select>
	

	<insert id="signup">
		insert into membertable(memNum, memName, memEmail, memNickname, memPw, memAd, memGender, memPh) values(#{memNum}, #{memName}, #{memEmail}, #{memNickname} , #{memPw}, #{memAd}, #{memGender}, #{memPh})
	</insert>
	
	<update id="update">
		update membertable set memName = #{memName},memEmail = #{memEmail}, memNickname = #{memNickname}, memPw = #{memPw}, memAd = #{memAd}, memGender = #{memGender}, memPh = #{memPh} where memNum = #{memNum}
	
	</update>
	
	<delete id="deleteMember">
		delete from membertable where memNum = #{memNum}
	</delete>
	
	<select id="read" resultMap="MemberMap">
		SELECT 
		  mt.memNum, memName,memNickname, memEmail, memPw, memAd, memGender, memPh, memAuth
		FROM 
		  membertable mt LEFT OUTER JOIN auth_table Auth on mt.memNum = Auth.memNum 
		WHERE mt.memNum = #{memNum} 
	</select>
	
	<select id="findByMemberEmail" resultMap = "MemberMap">
		SELECT 
		  mt.memNum, memName, memNickname, memPw, memAd, memGender, memPh, memAuth, memEmail
		FROM 
		  membertable mt LEFT OUTER JOIN auth_table Auth on mt.memNum = Auth.memNum 
		WHERE mt.memEmail = #{memEmail} 
				
	</select>
	
	<insert id="insertProfile" >
		insert into Member_PROFILE(File_no, memNum, ChangeName) Values(seq_profile.nextval, #{memNum}, #{ChangeName})
	</insert>
	
	<select id="getMember">
		select membertable m JOIN Member_PROFILE p on (m.memNum = p.memNum)
		where memNum = #{memNum}
	</select>



























</mapper>